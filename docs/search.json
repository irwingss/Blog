[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre mi",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Latinoamérica Blog",
    "section": "",
    "text": "Gráficos animados con gganimate\n\n\n\nggplot2\n\n\ndataviz\n\n\nR\n\n\n\n\n\n\n\nIrwing S. Saldaña\n\n\nMar 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRetos de graficación con ggplot2\n\n\n\nggplot2\n\n\ndataviz\n\n\nR\n\n\n\n\n\n\n\nIrwing S. Saldaña\n\n\nMar 8, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/gganimate/index.html",
    "href": "posts/gganimate/index.html",
    "title": "Gráficos animados con gganimate",
    "section": "",
    "text": "Instalar librerías nuevas\nLibrerías a usar"
  },
  {
    "objectID": "posts/gganimate/index.html#transiciones-temporales-en-gráficos-de-dispersión-de-puntos",
    "href": "posts/gganimate/index.html#transiciones-temporales-en-gráficos-de-dispersión-de-puntos",
    "title": "Gráficos animados con gganimate",
    "section": "1.1. Transiciones temporales en gráficos de dispersión de puntos",
    "text": "1.1. Transiciones temporales en gráficos de dispersión de puntos\nUna sintaxis especial del código de gganimate para las etiquetas temporales es utilizar dentro del título el código {frame_time} que importa la categoría temporal a la que corresponde cada cuadro del GIF animado y lo imprime en la etiqueta. Es clásico colocar esto en el título.\nEn esta sección verás el uso de más funciones - view_follow(fixed_y = TRUE) - shadow_wake(wake_length = 0.1, alpha = FALSE) - shadow_mark(alpha = 0.3, size = 0.5)\nQue le dan un toque distintivo a cada gráfico.\n\n# Creemos un gráfico estático\nlibrary(gapminder)\np <- gapminder %>% \n  ggplot(aes(x = gdpPercap, y=lifeExp, \n             size = pop, colour = country)) +\n  geom_point(show.legend = FALSE, alpha = 0.7) +\n  labs(x = \"GDP\", y = \"Life expectancy\")+\n  scale_color_viridis_d() +\n  scale_size(range = c(2, 12)) +\n  scale_x_log10()\np\n\n\n\n\n\n# Transición por variable year\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\")\n\n\n\n\n\n# Transición por variable year y con faceta por continent\np + facet_wrap(~continent) +\n  transition_time(year) +\n  labs(title = \"Year: {frame_time}\")\n\n\n\n\n\n# Transición por variable year y seguimiento activo de los datos\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  view_follow(fixed_y = TRUE)\n\n\n\n\n\n# Transición por variable year y movimiento con sombras móviles\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_wake(wake_length = 0.1, alpha = FALSE)\n\n\n\n\n\n# Transición por variable year y movimiento con sombras fijas\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\") +\n  shadow_mark(alpha = 0.3, size = 0.5)"
  },
  {
    "objectID": "posts/gganimate/index.html#transiciones-temporales-en-gráficos-de-líneas",
    "href": "posts/gganimate/index.html#transiciones-temporales-en-gráficos-de-líneas",
    "title": "Gráficos animados con gganimate",
    "section": "1.2. Transiciones temporales en gráficos de líneas",
    "text": "1.2. Transiciones temporales en gráficos de líneas\nLa transición de líneas se aplica con transition_reveal() especificando la variable que aparezca en el eje X para realizar el revelado. En este caso, el eje X es la variable Day.\n\n# Creemos un gráfico de lineas simple\nZ <- airquality %>% \n  mutate(Month = factor(Month, labels=c(\"5\"=\"Mayo\",\"6\"=\"Junio\",\"7\"=\"Julio\",\n                                        \"8\"=\"Agosto\",\"9\"=\"Setiembre\"))) %>%   ggplot(aes(x=Day, y=Temp, color=Month))+ \n  geom_line() +\n  labs(x = \"Día del mes\", y = \"Temperatura\") +\n  theme_bw()+\n  theme(legend.position = \"top\")\nZ\n\n\n\n\n\n# Transición de las líneas con revelado en base al eje x\nZ + transition_reveal(Day)\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\n\n# Transición de las líneas guiadas por punto, \n# con revelado en base al eje x\nZ + \n  geom_point() +\n  transition_reveal(Day)\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\n\n# Transición de las líneas y punto, \n# con revelado en base al eje x\nZ + \n  geom_point(aes(group = seq_along(Day))) +\n  transition_reveal(Day)\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?"
  },
  {
    "objectID": "posts/gganimate/index.html#exportando-gifs-animados-en-alta-calidad",
    "href": "posts/gganimate/index.html#exportando-gifs-animados-en-alta-calidad",
    "title": "Gráficos animados con gganimate",
    "section": "1.3. Exportando GIFs animados en alta calidad",
    "text": "1.3. Exportando GIFs animados en alta calidad\nSe recomienda ir probando la resolución (argumento res) de animate(). Valores superiores a 150 píxeles por pulgada suelen demorar demasiado.\n\n# Se debe guardar el gráfico animado final en un objeto\nFinal <- Z + transition_reveal(Day)\n\n# Generemos la animación\nanimate(Final, renderer=magick_renderer(),\n        width = 20, height = 20, units=\"cm\", res=150)\n\n# Exportemos la animación activa en el Visualizador (Panel Viewer)\nanim_save(\"mi animacion lines.gif\")"
  },
  {
    "objectID": "posts/retos ggplot2/index.html#reto-gráfico-de-barras-laterales",
    "href": "posts/retos ggplot2/index.html#reto-gráfico-de-barras-laterales",
    "title": "Retos de graficación con ggplot2",
    "section": "9.1. Reto gráfico de barras laterales:",
    "text": "9.1. Reto gráfico de barras laterales:"
  },
  {
    "objectID": "posts/retos ggplot2/index.html#reto-gráfico-de-barras-laterales-1",
    "href": "posts/retos ggplot2/index.html#reto-gráfico-de-barras-laterales-1",
    "title": "Retos de graficación con ggplot2",
    "section": "9.2. Reto gráfico de barras laterales:",
    "text": "9.2. Reto gráfico de barras laterales:"
  },
  {
    "objectID": "posts/retos ggplot2/index.html#con-funciones-de-densidad-clásicas",
    "href": "posts/retos ggplot2/index.html#con-funciones-de-densidad-clásicas",
    "title": "Retos de graficación con ggplot2",
    "section": "11.1. Con funciones de densidad clásicas",
    "text": "11.1. Con funciones de densidad clásicas"
  },
  {
    "objectID": "posts/retos ggplot2/index.html#con-gghighlight-para-resaltar-las-densidades",
    "href": "posts/retos ggplot2/index.html#con-gghighlight-para-resaltar-las-densidades",
    "title": "Retos de graficación con ggplot2",
    "section": "11.2. Con gghighlight para resaltar las densidades",
    "text": "11.2. Con gghighlight para resaltar las densidades"
  },
  {
    "objectID": "posts/retos ggplot2/index.html#con-ggridges-para-mostrarlas-en-paralelo",
    "href": "posts/retos ggplot2/index.html#con-ggridges-para-mostrarlas-en-paralelo",
    "title": "Retos de graficación con ggplot2",
    "section": "11.2. Con ggridges para mostrarlas en paralelo",
    "text": "11.2. Con ggridges para mostrarlas en paralelo"
  }
]